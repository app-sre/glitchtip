[project]
name = "glitchtip"
version = "0.1.0"
description = "GlitchTip"
authors = [{ name = "AppSRE", email = "sd-app-sre@redhat.com" }]
license = { text = "MIT License" }
readme = "README.md"
requires-python = "~=3.13.3"
dependencies = [
    # we want to use the latest!!! version of qontract-reconcile
    "qontract-reconcile>=0.10.1rc1177",
    "pytest ~=8.3",
    "pytest-order ~=1.3.0",
]

[project.urls]
homepage = "https://github.com/app-sre/glitchtip"
repository = "https://github.com/app-sre/glitchtip"
documentation = "https://github.com/app-sre/glitchtip"

[dependency-groups]
dev = [
    # allow updates for minor versions
    "ruff ~=0.7",
    "mypy ~=1.13",
    "django>=5.1.3",
    "django-stubs>=5.1.1",
]

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = 'py312'
include = ["acceptance/*.py", "appsre/*.py", "**/pyproject.toml"]
src = ["acceptance", "appsre"]
extend-exclude = [
    # exclude some common cache and tmp directories
    ".local",
    ".cache",
    "tmp",
]
fix = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "CPY",     # Missing copyright header
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D211",    # No blank lines allowed before class docstring
    "D212",    # multi-line-summary-first-line
    "D213",    # multi-line-summary-second-line
    "D4",      # Doc string style
    "E501",    # Line too long
    "PLR0904", # Too many public methods
    "PLR0913", # Too many arguments
    "PLR0917", # Too many positional arguments
    "S101",    # Use of assert detected. Pytest uses assert
    "S404",    # subprocess import
    "TRY300",  # try-consider-else
    "T201",
    "EM102",
    "TRY002",
    "TRY003",
    "ARG001",
    "E402",    # top-level import not at top of file
    # pydoclint
    "DOC",
    # May conflict with the formatter, https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q",
    "COM812",
    "COM819",
    "ISC001",
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["acceptance", "appsre"]

# Mypy configuration
[tool.mypy]
files = ["appsre", "acceptance"]
plugins = ["pydantic.mypy"]
enable_error_code = ["truthy-bool", "redundant-expr"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
follow_imports = "silent"

[[tool.mypy.overrides]]
# Below are all of the packages that don't implement stub packages. Mypy will throw an error if we don't ignore the
# missing imports. See: https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
module = ["reconcile.*"]
ignore_missing_imports = true
